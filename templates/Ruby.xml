<templateSet group="Ruby">
  <template name="cl" value="# $PURPOSE_OF_THE_CLASS$&#10;class $CLASS_NAME$&#10;  $END$&#10;end # $CLASS_NAME$" description="Create a class" toReformat="true" toShortenFQNames="true">
    <variable name="PURPOSE_OF_THE_CLASS" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="CLASS_NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context />
  </template>
  <template name="defp" value="# $DOC$&#10;def $METHOD_NAME$&#10;  $SELECTION$$END$&#10;end  &#10;&#10;" description="define public method" toReformat="true" toShortenFQNames="true">
    <variable name="DOC" expression="&quot;Describe your method&quot;" defaultValue="" alwaysStopAt="true" />
    <variable name="METHOD_NAME" expression="&quot;method_name&quot;" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="false" />
      <option name="XML" value="false" />
      <option name="RUBY" value="true" />
    </context>
  </template>
  <template name="cc" value="# $brief_description$&#10;class $CLASS_NAME$&#10;  # $CONSTRCUTOR_DESCRIPTION$&#10;  def initialize&#10;    $END$&#10;  end&#10;end # $CLASS_NAME$" description="Class with Construtor" toReformat="true" toShortenFQNames="true">
    <variable name="brief_description" expression="&quot;Some Description&quot;" defaultValue="" alwaysStopAt="true" />
    <variable name="CLASS_NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="CONSTRCUTOR_DESCRIPTION" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="RUBY" value="true" />
    </context>
  </template>
  <template name="val" value="validates :$attribute$, $validation_type$" description="Add a validation" toReformat="false" toShortenFQNames="true">
    <variable name="attribute" expression="&quot;attribute_name&quot;" defaultValue="" alwaysStopAt="true" />
    <variable name="validation_type" expression="&quot;validation: value&quot;" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="RUBY" value="true" />
    </context>
  </template>
  <template name="valp" value="validates :$attribute$, presence: true" description="Validates presence of..." toReformat="false" toShortenFQNames="true">
    <variable name="attribute" expression="&quot;attribute_name&quot;" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="RUBY" value="true" />
    </context>
  </template>
  <template name="modd" value="# $PURPOSE_OF_MODULE$&#10;module $MODULE_NAME$&#10;  $SELECTION$$END$&#10;end # $MODULE_NAME$  " description="module with documentation" toReformat="false" toShortenFQNames="true">
    <variable name="PURPOSE_OF_MODULE" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="MODULE_NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="RUBY" value="true" />
    </context>
  </template>
  <template name="def" value="def $METHOD_NAME$&#10;  $SELECTION$$END$&#10;end  &#10;&#10;" description="define private method" toReformat="true" toShortenFQNames="true">
    <variable name="METHOD_NAME" expression="&quot;method_name&quot;" defaultValue="" alwaysStopAt="true" />
    <context />
  </template>
  <template name="each" value="each do |$ELEMENT$|&#10;  $END$&#10;end&#10; " description="each" toReformat="true" toShortenFQNames="true">
    <variable name="ELEMENT" expression="" defaultValue="" alwaysStopAt="true" />
    <context />
  </template>
  <template name="eachi" value="each_with_index do |$ELEMENT$, $INDEX$|&#10;  $END$&#10;end&#10;  " description="each with index" toReformat="true" toShortenFQNames="true">
    <variable name="ELEMENT" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="INDEX" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="false" />
      <option name="XML" value="false" />
      <option name="RUBY" value="true" />
    </context>
  </template>
  <template name="forin" value="for $ELEMENT$ in $COLLECTION$&#10;  $ELEMENT$.$E$&#10;end$END$" description="for in collection" toReformat="true" toShortenFQNames="true">
    <variable name="ELEMENT" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="COLLECTION" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="E" expression="" defaultValue="" alwaysStopAt="true" />
    <context />
  </template>
  <template name="casel" value="case $OBJ$&#10;when $CONDITION$    then  $END$&#10;end" description="case inline" toReformat="true" toShortenFQNames="true">
    <variable name="OBJ" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="CONDITION" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="false" />
      <option name="XML" value="false" />
      <option name="RUBY" value="true" />
    </context>
  </template>
  <template name="defc" value="# $DOC$&#10;def self.$METHOD_NAME$&#10;  $SELECTION$$END$&#10;end  &#10;&#10;" description="define public class method" toReformat="true" toShortenFQNames="true">
    <variable name="DOC" expression="&quot;Describe your method" defaultValue="" alwaysStopAt="true" />
    <variable name="METHOD_NAME" expression="&quot;method_name&quot;" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="false" />
      <option name="XML" value="false" />
      <option name="RUBY" value="true" />
    </context>
  </template>
  <template name="mod" value="module $MODULE_NAME$&#10;  $SELECTION$$END$&#10;end # $MODULE_NAME$  " description="module" toReformat="true" toShortenFQNames="true">
    <variable name="MODULE_NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="RUBY" value="true" />
    </context>
  </template>
  <template name="red" value="reduce($INIT$) do |$MEM$, $OBJ$|&#10;  $END$&#10;end&#10;  " description="reduce" toReformat="true" toShortenFQNames="true">
    <variable name="INIT" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="MEM" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="OBJ" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="RUBY" value="true" />
    </context>
  </template>
  <template name="ewo" value="each_with_object($INIT$) do |$OBJ$, $MEM$|&#10;  $END$&#10;end&#10;  " description="each with object" toReformat="true" toShortenFQNames="true">
    <variable name="INIT" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="OBJ" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="MEM" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="RUBY" value="true" />
    </context>
  </template>
  <template name="wt" value="when $CONDITION$    then $END$" description="when then" toReformat="true" toShortenFQNames="true">
    <variable name="CONDITION" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="RUBY" value="true" />
    </context>
  </template>
  <template name="det" value="detect { |$E$| $SELECTION$$END$ }" description="detect" toReformat="true" toShortenFQNames="true">
    <variable name="E" expression="" defaultValue="" alwaysStopAt="true" />
    <context />
  </template>
  <template name="ife" value="if $CONDITION$&#10;  $SELECTION$$STATEMENT_ONE$&#10;else&#10;  $STATEMENT_TWO$&#10;end" description="Creates an if-else block" toReformat="true" toShortenFQNames="true">
    <variable name="CONDITION" expression="&quot;condition&quot;" defaultValue="" alwaysStopAt="true" />
    <variable name="STATEMENT_ONE" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="STATEMENT_TWO" expression="" defaultValue="" alwaysStopAt="true" />
    <context />
  </template>
</templateSet>