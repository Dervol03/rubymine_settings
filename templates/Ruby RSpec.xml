<templateSet group="Ruby RSpec">
  <template name="desc" value="describe '$SYSTEM_UNDER_TEST$' do&#10;   $SELECTION$$END$&#10;end # $SYSTEM_UNDER_TEST$" description="desc" toReformat="true" toShortenFQNames="true">
    <variable name="SYSTEM_UNDER_TEST" expression="&quot;element_under_test&quot;" defaultValue="" alwaysStopAt="true" />
    <context />
  </template>
  <template name="it" value="it '$DO_SOME_COOL_STUFF$' do&#10;  $SELECTION$$END$&#10;end" description="it" toReformat="true" toShortenFQNames="true">
    <variable name="DO_SOME_COOL_STUFF" expression="&quot;what does your object do?&quot;" defaultValue="" alwaysStopAt="true" />
    <context />
  </template>
  <template name="con" value="context '$SPEC_CONTEXT$' do&#10;  $SELECTION$$END$&#10;end # $SPEC_CONTEXT$" description="context" toReformat="true" toShortenFQNames="true">
    <variable name="SPEC_CONTEXT" expression="&quot;what is the state to enter?&quot;" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="RUBY" value="true" />
    </context>
  </template>
  <template name="descc" value="describe $SYSTEM_UNDER_TEST$ do&#10;   $END$&#10;end # $SYSTEM_UNDER_TEST$" description="desc of class" toReformat="true" toShortenFQNames="true">
    <variable name="SYSTEM_UNDER_TEST" expression="&quot;class_under_test&quot;" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="false" />
      <option name="XML" value="false" />
      <option name="RUBY" value="true" />
    </context>
  </template>
  <template name="bef" value="before(:each) do&#10;  $SELECTION$$END$&#10;end&#10;" description="before each" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="RUBY" value="true" />
    </context>
  </template>
  <template name="befa" value="before(:all) do&#10;  $SELECTION$$END$&#10;end&#10;" description="before all" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="RUBY" value="true" />
    </context>
  </template>
  <template name="let" value="let(:$DESCRIPTION$) { $SELECTION$$END$ }" description="let" toReformat="false" toShortenFQNames="true">
    <variable name="DESCRIPTION" expression="&quot;description&quot;" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="RUBY" value="true" />
    </context>
  </template>
  <template name="exp" value="expect($SUBJECT$).to $END$" description="expect" toReformat="true" toShortenFQNames="true">
    <variable name="SUBJECT" expression="&quot;subject&quot;" defaultValue="&quot;subject&quot;" alwaysStopAt="true" />
    <context>
      <option name="RUBY" value="true" />
    </context>
  </template>
  <template name="expe" value="expect { $SUBJECT$ }.to raise_error($END$)" description="expect error" toReformat="true" toShortenFQNames="true">
    <variable name="SUBJECT" expression="&quot;subject&quot;" defaultValue="&quot;subject&quot;" alwaysStopAt="true" />
    <context>
      <option name="RUBY" value="true" />
    </context>
  </template>
  <template name="expne" value="expect { $SUBJECT$ }.not_to raise_error($END$)" description="expect not to error" toReformat="true" toShortenFQNames="true">
    <variable name="SUBJECT" expression="&quot;subject&quot;" defaultValue="&quot;subject&quot;" alwaysStopAt="true" />
    <context>
      <option name="RUBY" value="true" />
    </context>
  </template>
  <template name="expn" value="expect($SUBJECT$).not_to $END$" description="expect not" toReformat="true" toShortenFQNames="true">
    <variable name="SUBJECT" expression="&quot;subject&quot;" defaultValue="&quot;subject&quot;" alwaysStopAt="true" />
    <context>
      <option name="RUBY" value="true" />
    </context>
  </template>
  <template name="sub" value="subject { $SELECTION$$END$ }" description="subject" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="RUBY" value="true" />
    </context>
  </template>
  <template name="its" value="it { is_expected.to $SELECTION$$END$  }" description="Online IT" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="RUBY" value="true" />
    </context>
  </template>
</templateSet>